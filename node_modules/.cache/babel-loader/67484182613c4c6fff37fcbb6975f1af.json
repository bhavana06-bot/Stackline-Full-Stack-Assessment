{"ast":null,"code":"import axios from \"axios\";\nexport const SORT = \"SORT\";\nexport const FETCH = \"FETCH\";\nexport const sortBy = key => ({\n  type: SORT,\n  key\n});\nexport const fetchAction = data => ({\n  type: FETCH,\n  data\n});\nexport const fetchData = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(\"https://mocki.io/v1/cd569385-602e-4776-99a1-edb3f911d869\");\n      dispatch(fetchAction(response.data));\n    } catch (err) {\n      console.error(err);\n      dispatch(fetchAction([]));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/bhavanamannam/Desktop/bhavana study meterial/react js/Stackline-Full-Stack-Assessment/react-typescript-taskify/src/actions/actions.ts"],"names":["axios","SORT","FETCH","sortBy","key","type","fetchAction","data","fetchData","dispatch","response","get","err","console","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,IAAI,GAAG,MAAb;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AAsBP,OAAO,MAAMC,MAAM,GAAIC,GAAD,KAA8B;AAClDC,EAAAA,IAAI,EAAEJ,IAD4C;AAElDG,EAAAA;AAFkD,CAA9B,CAAf;AAKP,OAAO,MAAME,WAAW,GAAIC,IAAD,KAAqC;AAC9DF,EAAAA,IAAI,EAAEH,KADwD;AAE9DK,EAAAA;AAF8D,CAArC,CAApB;AAKP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO,MAAOC,QAAP,IAA0D;AAC/D,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAuB,0DAAvB,CAAvB;AACAF,MAAAA,QAAQ,CAACH,WAAW,CAACI,QAAQ,CAACH,IAAV,CAAZ,CAAR;AACD,KAHD,CAGE,OAAOK,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAH,MAAAA,QAAQ,CAACH,WAAW,CAAC,EAAD,CAAZ,CAAR;AACD;AACF,GARD;AASD,CAVM","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\n\nexport const SORT = \"SORT\";\nexport const FETCH = \"FETCH\";\n\ninterface SalesData {\n  weekEnding: string;\n  retailSales: number;\n  wholesaleSales: number;\n  unitsSold: number;\n  retailerMargin: number;\n}\n\ninterface SortAction {\n  type: typeof SORT;\n  key: string;\n}\n\ninterface FetchAction {\n  type: typeof FETCH;\n  data: SalesData[];\n}\n\nexport type ActionTypes = SortAction | FetchAction;\n\nexport const sortBy = (key: string): SortAction => ({\n  type: SORT,\n  key,\n});\n\nexport const fetchAction = (data: SalesData[]): FetchAction => ({\n  type: FETCH,\n  data,\n});\n\nexport const fetchData = () => {\n  return async (dispatch: Dispatch<ActionTypes>): Promise<void> => {\n    try {\n      const response = await axios.get<SalesData[]>(\"https://mocki.io/v1/cd569385-602e-4776-99a1-edb3f911d869\");\n      dispatch(fetchAction(response.data));\n    } catch (err) {\n      console.error(err);\n      dispatch(fetchAction([]));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}