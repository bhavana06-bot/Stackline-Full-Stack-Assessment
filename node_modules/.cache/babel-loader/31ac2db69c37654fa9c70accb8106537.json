{"ast":null,"code":"import { SORT, FETCH_DATA_REQUEST, FETCH_DATA_SUCCESS, FETCH_DATA_FAILURE, FETCH } from \"../constant\";\n/*interface SalesData {\n  weekEnding: string;\n  retailSales: number;\n  wholesaleSales: number;\n  unitsSold: number;\n  retailerMargin: number;\n}\n\ninterface SortAction {\n  type: typeof SORT;\n  key: string;\n}\n\ninterface FetchAction {\n  type: typeof FETCH;\n  data: SalesData[];\n}\n\nexport type ActionTypes = SortAction | FetchAction;*/\n\nexport const fetchDataRequest = () => ({\n  type: FETCH_DATA_REQUEST\n});\nexport const fetchDataSuccess = data => ({\n  type: FETCH_DATA_SUCCESS,\n  payload: data\n});\nexport const fetchDataFailure = error => ({\n  type: FETCH_DATA_FAILURE,\n  payload: error\n});\nexport const sortBy = key => ({\n  type: SORT,\n  key\n});\nexport const fetchAction = data => ({\n  type: FETCH,\n  data\n});\nexport const fetchData = () => {\n  return async dispatch => {\n    dispatch(fetchDataRequest());\n\n    try {\n      const response = await fetch(\"https://api.example.com/data\");\n      const data = await response.json();\n      dispatch(fetchDataSuccess(data));\n    } catch (error) {\n      dispatch(fetchDataFailure(error.message));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/bhavanamannam/Desktop/bhavana study meterial/react js/Stackline-Full-Stack-Assessment/react-typescript-taskify/src/actions/actions.ts"],"names":["SORT","FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","FETCH","fetchDataRequest","type","fetchDataSuccess","data","payload","fetchDataFailure","error","sortBy","key","fetchAction","fetchData","dispatch","response","fetch","json","message"],"mappings":"AAGA,SAASA,IAAT,EAAeC,kBAAf,EAAmCC,kBAAnC,EAAsDC,kBAAtD,EAAyEC,KAAzE,QAAqF,aAArF;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAO,MAAMC,gBAAgB,GAAG,OAAoB;AAClDC,EAAAA,IAAI,EAAEL;AAD4C,CAApB,CAAzB;AAIP,OAAO,MAAMM,gBAAgB,GAAIC,IAAD,KAA6B;AAC3DF,EAAAA,IAAI,EAAEJ,kBADqD;AAE3DO,EAAAA,OAAO,EAAED;AAFkD,CAA7B,CAAzB;AAKP,OAAO,MAAME,gBAAgB,GAAIC,KAAD,KAAiC;AAC/DL,EAAAA,IAAI,EAAEH,kBADyD;AAE/DM,EAAAA,OAAO,EAAEE;AAFsD,CAAjC,CAAzB;AAKT,OAAO,MAAMC,MAAM,GAAIC,GAAD,KAA+B;AACnDP,EAAAA,IAAI,EAAEN,IAD6C;AAEnDa,EAAAA;AAFmD,CAA/B,CAAf;AAKP,OAAO,MAAMC,WAAW,GAAIN,IAAD,KAA6B;AACtDF,EAAAA,IAAI,EAAEF,KADgD;AAEtDI,EAAAA;AAFsD,CAA7B,CAApB;AAKP,OAAO,MAAMO,SAAS,GAAG,MAAM;AAC7B,SAAO,MAAOC,QAAP,IAA2C;AAChDA,IAAAA,QAAQ,CAACX,gBAAgB,EAAjB,CAAR;;AACA,QAAI;AACF,YAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,YAAMV,IAAI,GAAG,MAAMS,QAAQ,CAACE,IAAT,EAAnB;AACAH,MAAAA,QAAQ,CAACT,gBAAgB,CAACC,IAAD,CAAjB,CAAR;AACD,KAJD,CAIE,OAAOG,KAAP,EAAmB;AACnBK,MAAAA,QAAQ,CAACN,gBAAgB,CAACC,KAAK,CAACS,OAAP,CAAjB,CAAR;AACD;AACF,GATD;AAUD,CAXM","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {ApplicationState,ActionTypes} from '../types'\nimport { SORT, FETCH_DATA_REQUEST, FETCH_DATA_SUCCESS,FETCH_DATA_FAILURE,FETCH} from \"../constant\";\n\n\n/*interface SalesData {\n  weekEnding: string;\n  retailSales: number;\n  wholesaleSales: number;\n  unitsSold: number;\n  retailerMargin: number;\n}\n\ninterface SortAction {\n  type: typeof SORT;\n  key: string;\n}\n\ninterface FetchAction {\n  type: typeof FETCH;\n  data: SalesData[];\n}\n\nexport type ActionTypes = SortAction | FetchAction;*/\n\n  export const fetchDataRequest = (): ActionTypes => ({\n    type: FETCH_DATA_REQUEST\n  });\n  \n  export const fetchDataSuccess = (data: any): ActionTypes => ({\n    type: FETCH_DATA_SUCCESS,\n    payload: data\n  });\n  \n  export const fetchDataFailure = (error: string): ActionTypes => ({\n    type: FETCH_DATA_FAILURE,\n    payload: error\n  });\n\nexport const sortBy = (key: string): ActionTypes => ({\n  type: SORT,\n  key,\n});\n\nexport const fetchAction = (data: any): ActionTypes => ({\n  type: FETCH,\n  data,\n});\n\nexport const fetchData = () => {\n  return async (dispatch: Dispatch<ActionTypes>) => {\n    dispatch(fetchDataRequest());\n    try {\n      const response = await fetch(\"https://api.example.com/data\");\n      const data = await response.json();\n      dispatch(fetchDataSuccess(data));\n    } catch (error: any) {\n      dispatch(fetchDataFailure(error.message));\n    }\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}