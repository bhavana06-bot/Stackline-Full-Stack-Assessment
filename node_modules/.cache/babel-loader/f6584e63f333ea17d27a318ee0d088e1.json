{"ast":null,"code":"const formatMonth = dateString => {\n  const date = new Date(dateString);\n  const monthNames = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n  const month = monthNames[date.getMonth()];\n  return `${month}`;\n};\nconst aggregateSalesByMonth = sales => {\n  return sales.reduce((acc, sale) => {\n    const date = new Date(sale.weekEnding);\n    const monthKey = formatMonth(date);\n    if (!acc[monthKey]) {\n      acc[monthKey] = {\n        weekEnding: monthKey,\n        retailSales: 0,\n        wholesaleSales: 0,\n        unitsSold: 0,\n        retailerMargin: 0\n      };\n    }\n    acc[monthKey].retailSales += sale.retailSales;\n    acc[monthKey].wholesaleSales += sale.wholesaleSales;\n    acc[monthKey].unitsSold += sale.unitsSold;\n    acc[monthKey].retailerMargin += sale.retailerMargin;\n    return acc;\n  }, {});\n};\nexport { formatMonth, aggregateSalesByMonth };","map":{"version":3,"names":["formatMonth","dateString","date","Date","monthNames","month","getMonth","aggregateSalesByMonth","sales","reduce","acc","sale","weekEnding","monthKey","retailSales","wholesaleSales","unitsSold","retailerMargin"],"sources":["/Users/bhavanamannam/Desktop/assignment/Stackline-Full-Stack-Assessment/src/utills/graph.ts"],"sourcesContent":["\nimport {WeeklySales} from './types';\n\n\nconst formatMonth = (dateString: Date): string => {\n  const date = new Date(dateString);\n  const monthNames = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n  const month = monthNames[date.getMonth()];\n \n  return `${month}`;\n};\n\n\nconst aggregateSalesByMonth = (sales: WeeklySales[]): Record<string, WeeklySales> => {\n  return sales.reduce((acc, sale) => {\n      const date = new Date(sale.weekEnding);\n      const monthKey = formatMonth(date);\n\n      if (!acc[monthKey]) {\n          acc[monthKey] = {\n              weekEnding: monthKey,\n              retailSales: 0,\n              wholesaleSales: 0,\n              unitsSold: 0,\n              retailerMargin: 0\n          };\n      }\n\n      acc[monthKey].retailSales += sale.retailSales;\n      acc[monthKey].wholesaleSales += sale.wholesaleSales;\n      acc[monthKey].unitsSold += sale.unitsSold;\n      acc[monthKey].retailerMargin += sale.retailerMargin;\n\n      return acc;\n  }, {} as Record<string, WeeklySales>);\n};\nexport {formatMonth,aggregateSalesByMonth};"],"mappings":"AAIA,MAAMA,WAAW,GAAIC,UAAgB,IAAa;EAChD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,MAAMG,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACvG,MAAMC,KAAK,GAAGD,UAAU,CAACF,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC;EAEzC,OAAO,GAAGD,KAAK,EAAE;AACnB,CAAC;AAGD,MAAME,qBAAqB,GAAIC,KAAoB,IAAkC;EACnF,OAAOA,KAAK,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAC/B,MAAMT,IAAI,GAAG,IAAIC,IAAI,CAACQ,IAAI,CAACC,UAAU,CAAC;IACtC,MAAMC,QAAQ,GAAGb,WAAW,CAACE,IAAI,CAAC;IAElC,IAAI,CAACQ,GAAG,CAACG,QAAQ,CAAC,EAAE;MAChBH,GAAG,CAACG,QAAQ,CAAC,GAAG;QACZD,UAAU,EAAEC,QAAQ;QACpBC,WAAW,EAAE,CAAC;QACdC,cAAc,EAAE,CAAC;QACjBC,SAAS,EAAE,CAAC;QACZC,cAAc,EAAE;MACpB,CAAC;IACL;IAEAP,GAAG,CAACG,QAAQ,CAAC,CAACC,WAAW,IAAIH,IAAI,CAACG,WAAW;IAC7CJ,GAAG,CAACG,QAAQ,CAAC,CAACE,cAAc,IAAIJ,IAAI,CAACI,cAAc;IACnDL,GAAG,CAACG,QAAQ,CAAC,CAACG,SAAS,IAAIL,IAAI,CAACK,SAAS;IACzCN,GAAG,CAACG,QAAQ,CAAC,CAACI,cAAc,IAAIN,IAAI,CAACM,cAAc;IAEnD,OAAOP,GAAG;EACd,CAAC,EAAE,CAAC,CAAgC,CAAC;AACvC,CAAC;AACD,SAAQV,WAAW,EAACO,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module"}