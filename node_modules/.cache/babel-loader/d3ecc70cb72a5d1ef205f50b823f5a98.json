{"ast":null,"code":"import { SORT, FETCH_DATA_REQUEST, FETCH_DATA_SUCCESS, FETCH_DATA_FAILURE, FETCH } from \"../constant\";\n\n/*interface SalesData {\n  weekEnding: string;\n  retailSales: number;\n  wholesaleSales: number;\n  unitsSold: number;\n  retailerMargin: number;\n}\n\ninterface SortAction {\n  type: typeof SORT;\n  key: string;\n}\n\ninterface FetchAction {\n  type: typeof FETCH;\n  data: SalesData[];\n}\n\nexport type ActionTypes = SortAction | FetchAction;*/\n\nexport const fetchDataRequest = () => ({\n  type: FETCH_DATA_REQUEST\n});\nexport const fetchDataSuccess = data => ({\n  type: FETCH_DATA_SUCCESS,\n  payload: data\n});\nexport const fetchDataFailure = error => ({\n  type: FETCH_DATA_FAILURE,\n  payload: error\n});\nexport const sortBy = key => ({\n  type: SORT,\n  key\n});\nexport const fetchAction = data => ({\n  type: FETCH,\n  data\n});\nexport const fetchData = () => {\n  return async dispatch => {\n    dispatch(fetchDataRequest());\n    try {\n      const response = await fetch(\"https://mocki.io/v1/cd569385-602e-4776-99a1-edb3f911d869\");\n      const data = await response.json();\n      console.log('data in fetch', data);\n      dispatch(fetchAction(data));\n    } catch (error) {\n      dispatch(fetchDataFailure(error.message));\n    }\n  };\n};","map":{"version":3,"names":["SORT","FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","FETCH","fetchDataRequest","type","fetchDataSuccess","data","payload","fetchDataFailure","error","sortBy","key","fetchAction","fetchData","dispatch","response","fetch","json","console","log","message"],"sources":["/Users/bhavanamannam/Desktop/bhavana study meterial/react js/Stackline-Full-Stack-Assessment/react-typescript-taskify/src/actions/actions.ts"],"sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport {ApplicationState,ActionTypes} from '../types'\nimport { SORT, FETCH_DATA_REQUEST, FETCH_DATA_SUCCESS,FETCH_DATA_FAILURE,FETCH} from \"../constant\";\n\n\n/*interface SalesData {\n  weekEnding: string;\n  retailSales: number;\n  wholesaleSales: number;\n  unitsSold: number;\n  retailerMargin: number;\n}\n\ninterface SortAction {\n  type: typeof SORT;\n  key: string;\n}\n\ninterface FetchAction {\n  type: typeof FETCH;\n  data: SalesData[];\n}\n\nexport type ActionTypes = SortAction | FetchAction;*/\n\n  export const fetchDataRequest = (): ActionTypes => ({\n    type: FETCH_DATA_REQUEST\n  });\n  \n  export const fetchDataSuccess = (data: any): ActionTypes => ({\n    type: FETCH_DATA_SUCCESS,\n    payload: data\n  });\n  \n  export const fetchDataFailure = (error: string): ActionTypes => ({\n    type: FETCH_DATA_FAILURE,\n    payload: error\n  });\n\nexport const sortBy = (key: string): ActionTypes => ({\n  type: SORT,\n  key,\n});\n\nexport const fetchAction = (data: any): ActionTypes => ({\n  type: FETCH,\n  data,\n});\n\nexport const fetchData = () => {\n  return async (dispatch: Dispatch<ActionTypes>) => {\n    dispatch(fetchDataRequest());\n    try {\n      const response = await fetch(\"https://mocki.io/v1/cd569385-602e-4776-99a1-edb3f911d869\");\n      const data = await response.json();\n      console.log('data in fetch',data);\n      dispatch(fetchAction(data));\n    } catch (error: any) {\n      dispatch(fetchDataFailure(error.message));\n    }\n  };\n};\n\n"],"mappings":"AAGA,SAASA,IAAI,EAAEC,kBAAkB,EAAEC,kBAAkB,EAACC,kBAAkB,EAACC,KAAK,QAAO,aAAa;;AAGlG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,MAAoB;EAClDC,IAAI,EAAEL;AACR,CAAC,CAAC;AAEF,OAAO,MAAMM,gBAAgB,GAAIC,IAAS,KAAmB;EAC3DF,IAAI,EAAEJ,kBAAkB;EACxBO,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,gBAAgB,GAAIC,KAAa,KAAmB;EAC/DL,IAAI,EAAEH,kBAAkB;EACxBM,OAAO,EAAEE;AACX,CAAC,CAAC;AAEJ,OAAO,MAAMC,MAAM,GAAIC,GAAW,KAAmB;EACnDP,IAAI,EAAEN,IAAI;EACVa;AACF,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAIN,IAAS,KAAmB;EACtDF,IAAI,EAAEF,KAAK;EACXI;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,SAAS,GAAGA,CAAA,KAAM;EAC7B,OAAO,MAAOC,QAA+B,IAAK;IAChDA,QAAQ,CAACX,gBAAgB,CAAC,CAAC,CAAC;IAC5B,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAA0D,CAAC;MACxF,MAAMV,IAAI,GAAG,MAAMS,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAACb,IAAI,CAAC;MACjCQ,QAAQ,CAACF,WAAW,CAACN,IAAI,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOG,KAAU,EAAE;MACnBK,QAAQ,CAACN,gBAAgB,CAACC,KAAK,CAACW,OAAO,CAAC,CAAC;IAC3C;EACF,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}